/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off proyectoCerradura -c proyectoCerradura --vector_source="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/Waveform.vwf" --testbench_file="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off proyectoCerradura -c proyectoCerradura --vector_source="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/Waveform.vwf" --testbench_file="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/simulation/qsim/" proyectoCerradura -c proyectoCerradura</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="B:/resp_rob_2018.4.4/2018/digitalesII/laboratorio/proyectoDigital/avance3SDII/simulation/qsim/" proyectoCerradura -c proyectoCerradura</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work proyectoCerradura.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.cerraduraWaveForm_vhd_vec_tst
vcd file -direction proyectoCerradura.msim.vcd
vcd add -internal cerraduraWaveForm_vhd_vec_tst/*
vcd add -internal cerraduraWaveForm_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work proyectoCerradura.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -sdfmax cerraduraWaveForm_vhd_vec_tst/i1=proyectoCerradura_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.cerraduraWaveForm_vhd_vec_tst
vcd file -direction proyectoCerradura.msim.vcd
vcd add -internal cerraduraWaveForm_vhd_vec_tst/*
vcd add -internal cerraduraWaveForm_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2300.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("alarma")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("borrar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cambiar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock_100")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("correcto")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DECO7seg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("error")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ingresar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("puerta")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("teclado")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("teclado[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("teclado[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "teclado";
}

SIGNAL("validar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ventana")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clave_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 20;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clave_reg[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("clave_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clave_reg";
}

SIGNAL("ram_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 20;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ram_reg[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("ram_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram_reg";
}

SIGNAL("cont_intentos")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cont_intentos[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cont_intentos";
}

SIGNAL("cont_intentos[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cont_intentos";
}

SIGNAL("cont_intentos[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cont_intentos";
}

SIGNAL("cont_intentos[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cont_intentos";
}

SIGNAL("digitoBCD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("digitoBCD[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitoBCD";
}

SIGNAL("digitoBCD[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitoBCD";
}

SIGNAL("digitoBCD[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitoBCD";
}

SIGNAL("digitoBCD[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitoBCD";
}

SIGNAL("addr_cambiar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addr_cambiar[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_cambiar";
}

SIGNAL("addr_cambiar[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_cambiar";
}

SIGNAL("addr_cambiar[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_cambiar";
}

SIGNAL("addr_cambiar[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_cambiar";
}

SIGNAL("addr_ingresar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addr_ingresar[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_ingresar";
}

SIGNAL("addr_ingresar[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_ingresar";
}

SIGNAL("addr_ingresar[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_ingresar";
}

SIGNAL("addr_ingresar[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_ingresar";
}

SIGNAL("dataram")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 20;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataram[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

SIGNAL("dataram[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dataram";
}

GROUP("DECO7seg")
{
	MEMBERS = "DECO7seg[7]", "DECO7seg[6]", "DECO7seg[5]", "DECO7seg[4]", "DECO7seg[3]", "DECO7seg[2]", "DECO7seg[1]";
}

TRANSITION_LIST("alarma")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("borrar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
	}
}

TRANSITION_LIST("cambiar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1550.0;
	}
}

TRANSITION_LIST("clock_1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 115;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("clock_100")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 920;
			LEVEL 0 FOR 1.25;
			LEVEL 1 FOR 1.25;
		}
	}
}

TRANSITION_LIST("correcto")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("DECO7seg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("DECO7seg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("error")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ingresar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1130.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 810.0;
	}
}

TRANSITION_LIST("puerta")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2240.0;
	}
}

TRANSITION_LIST("teclado[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1690.0;
	}
}

TRANSITION_LIST("teclado[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 950.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 510.0;
	}
}

TRANSITION_LIST("teclado[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
	}
}

TRANSITION_LIST("teclado[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
	}
}

TRANSITION_LIST("teclado[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2120.0;
	}
}

TRANSITION_LIST("teclado[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 530.0;
	}
}

TRANSITION_LIST("teclado[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 490.0;
	}
}

TRANSITION_LIST("teclado[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1450.0;
	}
}

TRANSITION_LIST("teclado[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 410.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 930.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 550.0;
	}
}

TRANSITION_LIST("teclado[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1520.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 270.0;
	}
}

TRANSITION_LIST("validar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 250.0;
	}
}

TRANSITION_LIST("ventana")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("clave_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("ram_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("cont_intentos[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("cont_intentos[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("cont_intentos[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("cont_intentos[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1999.0;
		LEVEL 0 FOR 301.0;
	}
}

TRANSITION_LIST("digitoBCD[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("digitoBCD[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("digitoBCD[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("digitoBCD[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_cambiar[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_cambiar[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_cambiar[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_cambiar[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_ingresar[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_ingresar[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_ingresar[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("addr_ingresar[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

TRANSITION_LIST("dataram[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2300.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock_100";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ingresar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cambiar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "validar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "borrar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "teclado";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "teclado[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "digitoBCD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "digitoBCD[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "digitoBCD[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "digitoBCD[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "digitoBCD[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "ventana";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "puerta";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alarma";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "correcto";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "error";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DECO7seg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cont_intentos";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "cont_intentos[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "cont_intentos[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "cont_intentos[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "cont_intentos[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "clave_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "ram_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "addr_cambiar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
	CHILDREN = 85, 86, 87, 88;
}

DISPLAY_LINE
{
	CHANNEL = "addr_cambiar[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "addr_cambiar[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "addr_cambiar[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "addr_cambiar[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "addr_ingresar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
	CHILDREN = 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "addr_ingresar[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "addr_ingresar[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "addr_ingresar[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "addr_ingresar[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "dataram";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
	CHILDREN = 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "dataram[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 94;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
